shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
kingstimeseries <- ts(kings)
bins <- seq(min(kings), max(kings), length.out = input$bins + 1)
bins <- seq(min(kings), max(kings), length.out = bins + 1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/GitHub/Series-Tiempo/R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
help(cat)
help(boot)
library(boot)
help(boot)
acf(birthstimeseries)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/GitHub/Series-Tiempo/R')
runApp()
help("reactive")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp('~/GitHub/Series-Tiempo/R')
runApp()
runApp()
runApp()
help(red)
help("req")
runApp()
shiny::runApp()
runApp('~/GitHub/Series-Tiempo/R')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
